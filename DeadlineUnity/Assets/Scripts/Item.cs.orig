using System.Security.Policy;
using UnityEngine;
using System.Collections;

enum ItemType
{
    Health,
<<<<<<< HEAD
    Armor,
    HealthUp
=======
>>>>>>> 373c8c25137863b2aa2807fcd6bec671b1ee250f
}
public class Item : UnityObserver {
    public Material[] mats;
    public const string PICK_UP_ITEM = "PICK_UP_ITEM";
    private MazeCell currentCell;
    private MazeRoom currentRoom;
<<<<<<< HEAD
    ItemType itemType;
    public string type;
    public override void OnNotify( Object sender, EventArguments e )
    {
        if ( e.eventMessage == PICK_UP_ITEM )
        {
            
        }
    }
    void Awake()
    {
        RandomItem();
    }
=======

>>>>>>> 373c8c25137863b2aa2807fcd6bec671b1ee250f
    public void SetInitialLocation( MazeCell cell )
    {
        currentRoom = cell.room;
        SetLocation( cell );
    }

    private void SetLocation( MazeCell cell )
    {
        if ( currentCell != null )
        {
            currentCell.OnPlayerExited( );
        }
        currentCell = cell;
        transform.localPosition = cell.transform.localPosition;
    }

    private void RandomItem()
    {
        int enumCount = ItemType.GetNames(typeof (ItemType)).Length;
        int selection = UnityEngine.Random.Range(0, 10);
       

        if (selection <= 6)
        {
            itemType = ItemType.Health;
            Material[] health = new Material[1];
            health[0] = mats[0];
            transform.GetChild(0).renderer.materials = health;
           
        }
        if (selection > 5 && selection <= 9)
        {
            itemType = ItemType.Armor;
            Material[] armour = new Material[1];
            armour[0] = mats[1];
            transform.GetChild(0).renderer.materials = armour;
           
        }
        else if(selection > 9)
        {
            itemType = ItemType.HealthUp;
            Material[] healthUp = new Material[1];
            healthUp[0] = mats[2];
            transform.GetChild(0).renderer.materials = healthUp;
            
        }      
    }
}